// Place all the styles related to the static_pages controller here.
// They will automatically be included in application.css.
// You can use Sass (SCSS) here: http://sass-lang.com/

body {
	margin-top: 50px;
	margin-bottom: 60px;
}

/*@media (max-width:767px) { 
	.navbar-fixed-top { 
		position: fixed;
		bottom: 0;
		left: 0;
		width: 100%;
		margin: 0;
	}
}*/

p {
	width: 30%;
}

//usual reset stuff
*,*:before,*:after,ul,li,a,button,input,h1,h2,h3,h4,h5,h6,p, img, image, svg, path, g, canvas {
	margin: 0;
	padding: 0;
	box-sizing: border-box;
	background-color: transparent;
	border: none;
	text-decoration: none;
	font-family: 'Roboto';
	user-select: none;
	list-style: none;
	position: relative;
}

.firework {
	width: 100%;
	height: 100vh;
	margin: 0;
	padding: 0;
	background-color: #333;
	font-family: 'Roboto';
	overflow: hidden;
}

.firework h3 {
	background-color: white;
}

.circle {
	border-radius: 50%;
	position: absolute;
	transform: scale(0);
	animation: scale 1s;
	
	@for $i from 1 through 100 {
		$posX: random(100) + vw;
		$posY: random(100) + vh;
		$delay: random(10) + s;
		$color: random(200);
		$size1: random(300) + px;
		$size2: 100px + #{$size1};
		
		&:nth-child(#{$i}) {
			left: $posX;
			top: $posY;
			width: calc(#{$size2});
			height: calc(#{$size2});
			animation-delay: calc((#{$delay} / 10) * #{$i});
			
			& > .path {
				height: calc(#{$size2} / 2);
				
				& > .dot {
					animation-delay: calc((#{$delay} / 10) * #{$i});
					background-color: hsl($color, 81, 44);
				}
			}
		}
	}
	
	.path {
		width: 2px;
		position: absolute;
		left: calc(50% - 1px);
		top: 0;
		transform-origin: 50% 100%;
		
		@for $i from 1 through 18 {
			&:nth-child(#{$i}) {
				$diff: 360deg / 18;
				transform: rotate(calc(#{$diff} * (#{$i} - 1)));
			}
		}
	
		.dot {
			width: 4px;
			height: 30px;
			border-radius: 20px;
			position: absolute;
			left: -1px;
			top: -5px;
			transform-origin: 50% 0%;
			animation: dotScale 1s infinite;
		}
	}
}

@keyframes dotScale {
	100% {
		height: 0px;
	}
}

@keyframes scale {
	100% {
		transform: scale(1);
	}
}